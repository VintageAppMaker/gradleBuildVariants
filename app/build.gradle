plugins {
    id 'com.android.application'
    id 'kotlin-android'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "com.psw.gradlebuildvariants"
        minSdkVersion 23
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        viewBinding true
    }

    // Android Studio 3.0이후에는 flavorDimensions를
    // 반드시 정의하고 각 항목에서 dimension으로 정의해야 한다.
    // android{}안의 대부분의 값들을 재정의 할 수 있다.
    flavorDimensions "target"
    productFlavors {
        // product
        product {
            dimension "target"
            versionCode 10
            versionName "product"

            // 리소스를 재정의 가능하다. 리소스이름_variant.name 형태로 지정한다.
            // 반드시 리소스이름 단독으로된 파일은 없어야 한다.
            resValue "string", "app_name", "@string/app_name_product"

            // 변수를 정의하여 값을 관리
            buildConfigField 'boolean', 'enableCert', "false"
        }

        // dev
        dev {
            dimension "target"
            //  applicationId : package 명을 바꿀 수 있다.
            applicationId "com.psw.gradlebuildvariants.dev"
            versionCode 1
            versionName "dev"

            // 리소스를 재정의 가능하다. 리소스이름_variant.name 형태로 지정한다.
            // 반드시 리소스이름 단독으로된 파일은 없어야 한다.
            resValue "string", "app_name", "@string/app_name_dev"

            // 변수를 정의하여 값을 관리
            buildConfigField 'boolean', 'enableCert', "true"
        }
    }

    applicationVariants.all { variant ->
        def date = new Date()
        def formattedDate = date.format('yyyyMMdd_HHmmss')
        variant.outputs.all {
            outputFileName = "${variant.name}-${variant.versionName}-${variant.versionCode}_${formattedDate}.apk"
        }
    }

    sourceSets{
        // 찾고자 하는 파일이
        // 해당폴더에 없으면 디폴드 경로에서 파일을 찾는다.
        dev{
            res.srcDirs = ['src/dev/res']
        }
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}